openapi: "3.0.3"
info:
  title: "口コミサイト API Documentation"
  version: 1.0.0
  x-logo:
    url: "https://avatars.githubusercontent.com/u/98702638"
  description: |

  license:
    name: Apache-2.0
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

servers:
  - url: http://localhost/api
    description: 開発環境サーバ
tags:
  - name: request
    x-displayName: リクエスト
    description: |
      ## リクエストヘッダ

      | キー         | 値     | 説明             |
      | ------------ | ------ | ---------------- |
      | Accept       | string | application/json |
      | Content-Type | string | application/json |
      | X-XSRF-TOKEN | string |  |
      | X-NONCE      | string |  |

      ```json
      {
        "Accept": "application/json",
        "Content-Type": "application/json",
        "X-XSRF-TOKEN": "XSRF-TOKEN",
        "X-NONCE": "NONCE"
      }
      ```

  - name: response
    x-displayName: レスポンス
    description: |
      ## レスポンスリソース
      <SchemaDefinition schemaRef="#/components/schemas/ResponseResource" />

      ### ステータスリソース
      <SchemaDefinition schemaRef="#/components/schemas/StatusResource" />

      ## 成功レスポンス
      <SchemaDefinition schemaRef="#/components/schemas/SuccessResource" />

      ### ページネーションメタリソース
      <SchemaDefinition schemaRef="#/components/schemas/MetaResource" />

      ## エラーレスポンス
      <SchemaDefinition schemaRef="#/components/schemas/FailedResource" />

      ### エラーリソース
      <SchemaDefinition schemaRef="#/components/schemas/ErrorResource" />

  - name: project
    x-displayName: プロジェクト
    description: |
      ## プロジェクトリソース
      <SchemaDefinition schemaRef="#/components/schemas/ProjectResource" />

  - name: member
    x-displayName: プロジェクトメンバー
    description: |
      ## プロジェクトメンバーリソース
      <SchemaDefinition schemaRef="#/components/schemas/MemberResource" />

  - name: payment
    x-displayName: 支払方法
    description: |
      ## 支払方法リソース
      <SchemaDefinition schemaRef="#/components/schemas/PaymentResource" />

  - name: setting
    x-displayName: プロジェクト設定
    description: |
      ## 商品カテゴリーリソース
      <SchemaDefinition schemaRef="#/components/schemas/CategoryResource" />

      ## 商品リソース
      <SchemaDefinition schemaRef="#/components/schemas/ItemResource" />

  - name: account
    x-displayName: お会計
    description: |
      ## 会計リソース
      <SchemaDefinition schemaRef="#/components/schemas/AccountResource" />

      ## レジチェックリソース
      <SchemaDefinition schemaRef="#/components/schemas/CheckResource" />

x-tagGroups:
  - name: common
    x-displayName: 共通
    tags:
      - request
      - response

  - name: project
    x-displayName: プロジェクト
    tags:
      - project
      - member
      - payment

  - name: setting
    x-displayName: プロジェクト設定
    tags:
      - setting

  - name: account
    x-displayName: 会計
    tags:
      - account

paths:
  /v1/project:
    $ref: "./paths/project.yml"
  /v1/project/{project}:
    $ref: "./paths/project-id.yml"
  /v1/project/{project}/member:
    $ref: "./paths/member.yml"
  /v1/project/{project}/member/{member}:
    $ref: "./paths/member-id.yml"
  /v1/project/{project}/payment:
    $ref: "./paths/payment.yml"
  /v1/project/{project}/payment/{payment}:
    $ref: "./paths/payment-id.yml"

components:
  parameters:
    ACCEPT:
      name: Accept
      in: header
      schema:
        type: string
        example: application/json
    CONTENT-TYPE:
      name: Content-Type
      in: header
      schema:
        type: string
        example: application/json
    TOKEN:
      name: X-XSRF-TOKEN
      in: header
      schema:
        type: string
        example: ey******
    NONCE:
      name: X-NONCE
      in: header
      schema:
        type: string
        example: NONCE
    PER:
      name: per
      in: query
      schema:
        type: number
        example: 100
      required: false
    PAGE:
      name: page
      in: query
      schema:
        type: number
        example: 1
      required: false
    ORDER:
      name: order
      in: query
      description: |
        取得順
        |key|note|
        |-|-|
        |asc|古い順に取得|
        |desc|新しい順に取得|
      schema:
        type: string
        example: asc
      required: false
    Project:
      name: project
      in: path
      schema:
        type: string
        example: projectId
      required: true
    Member:
      name: member
      in: path
      schema:
        type: string
        example: memberId
      required: true
  schemas:
    $ref: "./schemas/index.yml"
  securitySchemes:
    cookieAuth:
      name: "X-XSRF-TOKEN"
      type: "apiKey"
      in: "cookie"
